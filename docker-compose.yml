x-dd-asm-samples: &x-dd-asm-samples
  image: "ghcr.io/datadog/dd-asm-samples:latest"
  # volumes:
    # - path to your agent here:/agent/dd-java-agent.jar
  environment: &x-dd-asm-samples-env
    DD_ENV: ${DD_ENV:?err}
    DD_VERSION: ${DD_VERSION:?err}
    DD_IAST_ENABLED: true
    DD_IAST_DETECTION_MODE: FULL
    DD_AGENT_HOST: datadog-agent
  depends_on:
    datadog-agent:
      condition: service_healthy

services:

  datadog-agent:
    container_name: datadog-agent
    image: "gcr.io/datadoghq/agent:latest"
    pid: host
    ports:
      - 8126:8126
    environment:
      DD_SITE: ${DD_SITE:-datadoghq.com}
      DD_API_KEY: ${DD_API_KEY:?err}
      DD_APM_NON_LOCAL_TRAFFIC: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
    healthcheck:
      test: [ "CMD-SHELL", "agent health" ]
      interval: 5s
      timeout: 3s
      retries: 5

  insecure-bank:
    <<: *x-dd-asm-samples
    ports:
      - 8080:8080
      - 8181:80
    environment:
      <<: *x-dd-asm-samples-env
      DD_SERVICE: ${DD_SERVICE_PREFIX?err}-insecure-bank
    command: ['insecure-bank']
    healthcheck:
      test: [ "CMD-SHELL", "curl http://localhost:8080" ]
      interval: 5s
      timeout: 3s
      retries: 5

  webgoat:
    <<: *x-dd-asm-samples
    ports:
      - 8080:8080
      - 9090:9090
      - 8181:80
    environment:
      <<: *x-dd-asm-samples-env
      DD_SERVICE: ${DD_SERVICE_PREFIX?err}-webgoat
    command: ['webgoat']
    healthcheck:
      test: [ "CMD-SHELL", "curl http://localhost:8080/WebGoat" ]
      interval: 5s
      timeout: 3s
      retries: 5

  benchmark:
    <<: *x-dd-asm-samples
    ports:
      - 8443:8443
      - 8181:80
    environment:
      <<: *x-dd-asm-samples-env
      DD_SERVICE: ${DD_SERVICE_PREFIX?err}-benchmark
    command: ['benchmark']
    healthcheck:
      test: [ "CMD-SHELL", "curl http://localhost:8443/benchmark/" ]
      interval: 5s
      timeout: 3s
      retries: 5